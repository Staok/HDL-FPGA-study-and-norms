1
00:00:02,520 --> 00:00:06,719
This is the PC run in CentOS 6.8, open the command prompt and go to the linux driver

2
00:00:09,240 --> 00:00:13,799
files which is downloaded from the link provided at the beginning of the video.

3
00:00:14,779 --> 00:00:25,198
Untar the driver and go to the driver directory Login as adminstrator.

4
00:00:28,019 --> 00:00:29,339
Install the driver

5
00:00:33,619 --> 00:00:35,278
Launch the driver

6
00:00:37,500 --> 00:00:44,250
In this GUI, user is able to disable or enable read & write transfer, changing transfer size

7
00:00:44,250 --> 00:00:47,279
in dword and number of descriptors.

8
00:00:49,240 --> 00:00:56,079
The number of dword is limited to 2048 which is 8kB DMA transfer size to cater all different

9
00:00:56,079 --> 00:01:02,218
PCIe configuration even through the example today PCIe gen3x8 design is able to run up

10
00:01:02,219 --> 00:01:04,359
to 64kB DMA transfer size.

11
00:01:05,760 --> 00:01:13,099
Besides that, the descriptor controller supports up to 128 descriptors for read and write DMAs.

12
00:01:14,819 --> 00:01:21,578
Now we start to run the DMA transfer, type 1 to run both read and write simultaneous.

13
00:01:23,319 --> 00:01:29,958
The result show pass and the speed is around 5.9GBps in both read and write transfer.

14
00:01:31,340 --> 00:01:38,979
Changing the DMA transfer size to 2048 dword which is 8kB, and run the dma in infinate

15
00:01:38,980 --> 00:01:46,119
loop. the throughput increasing to 6.4Gbps due to bigger transfer size.

16
00:01:48,060 --> 00:01:53,920
This is end of the demo for PCIe AVMM DMA reference design in Linux Machine.

17
00:01:54,980 --> 00:01:58,419
Next, I will run the second demo in Windows machine.

18
00:02:02,120 --> 00:02:07,200
Similar to First Demo , I will program the FPGA on the development kits and continue

19
00:02:07,200 --> 00:02:10,240
with power on the desktop PC with Windows 7.

20
00:02:10,979 --> 00:02:16,459
Open the windows driver downloaded previously and install the driver by following the instruction

21
00:02:16,460 --> 00:02:18,359
files inside the driver directory.

22
00:02:20,439 --> 00:02:25,219
This machine has the driver pre-installed and Iâ€™m going to launch the Windows GUI

23
00:02:25,219 --> 00:02:29,558
for AVMM DMA by open up the execution file.

24
00:02:32,080 --> 00:02:34,060
Click on DMA.

25
00:02:34,060 --> 00:02:38,760
The message below shows a gen3x8 device is detected.

26
00:02:39,430 --> 00:02:45,880
Go to setup tab, you can change the DMA default setting in this tab such as disable DMA read

27
00:02:45,879 --> 00:02:50,409
or write transfer, changing the number of iteration or data pattern.

28
00:02:50,409 --> 00:02:55,819
By default, this application will run both read and write DMA for 100 iteration by using

29
00:02:55,819 --> 00:02:56,759
random data.

30
00:02:57,960 --> 00:03:04,979
Go to debug tab, we can set the DMA descriptor address and read write the data in FPGA memory.

31
00:03:04,979 --> 00:03:10,148
In order to run the DMA successfully, the DMA descriptor address must be set exactly

32
00:03:10,150 --> 00:03:16,720
as the based address which is set in PCIe AVMM DMA IP core inside the qsys design file.

33
00:03:17,659 --> 00:03:23,399
Error tab is not ready at this moment but it will be ready in future release version.

34
00:03:24,219 --> 00:03:28,978
Back to the main tab and run the DMA transfer by clicking start button.

35
00:03:32,539 --> 00:03:40,599
Total 100 iteraction has been completed with average of 6.0GB/s and 6.1GB/s for both read

36
00:03:40,599 --> 00:03:42,488
and write transfer.

37
00:03:42,490 --> 00:03:47,650
You have successfully execute the Windows driver to perform the DMA transfer.

38
00:03:47,650 --> 00:03:51,590
Thanks you for watching this video

